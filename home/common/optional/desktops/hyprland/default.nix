{ pkgs, hyprlandSpec, ... }:
{
  home.packages = with pkgs; [
    playerctl
    cliphist
    hyprpicker
  ];
  imports = [
    ../services/swayosd
    ./apps/steam.nix

    ./exec.nix
    ./hyprlock.nix
    ./hypridle.nix
    ./cursor.nix
  ];

  xdg.portal = {
    config = {
      common = {
        default = [
          "hyprland"
          "gtk"
        ];
      };
    };
    configPackages = with pkgs; [
      xdg-desktop-portal-hyprland
      #xdg-desktop-portal-gtk
    ];
  };

  wayland.windowManager.hyprland = {
    enable = true;

    systemd.enable = false; # conflicts with uwsm
    xwayland.enable = true;

    extraConfig = ''
      cursor {
        no_hardware_cursors = true
      }
      xwayland {
        force_zero_scaling = true
      }
    '';

    settings = {
      autogenerated = false;
      general.border_size = 0;
      misc = {
        disable_splash_rendering = true;
        disable_hyprland_logo = true;
      };
      monitor = hyprlandSpec.monitors;
      workspace = hyprlandSpec.workspaces;
      input = {
        kb_layout = "dk";
        follow_mouse = true;
        touchpad.natural_scroll = true;
      };
      dwindle = {
        preserve_split = true;
      };
      "$mod" = "super";
      bind =
        [
          "$mod, Return, exec, uwsm app -- ${pkgs.alacritty}/bin/alacritty"
          "$mod, G, layoutmsg, togglesplit"
          "$mod, D, exec, tofi-drun | /bin/sh"
          "$mod, E, exec, uwsm app -- ${pkgs.nautilus}/bin/nautilus"
          "$mod, B, exec, uwsm app -- ${pkgs.librewolf}/bin/librewolf"
          "$mod SHIFT, B, exec, uwsm app -- ${pkgs.librewolf}/bin/librewolf --private-window"
          "$mod SHIFT, S, exec, ${pkgs.hyprshot}/bin/hyprshot -m region --raw | ${pkgs.satty}/bin/satty --filename - --early-exit --actions-on-enter save-to-clipboard --copy-command 'wl-copy'"
          "$mod SHIFT, E, exec, uswm stop"
          "$mod, C, exec, cliphist list | tofi | cliphist decode | wl-copy"
          "$mod, P, exec, hyprpicker -a | wl-copy" # Hex -> clipboard
          "$mod, Z, exec, swayosd-client --input-volume mute-toggle"

          # Window Management
          "$mod, Q, killactive"
          "$mod, V, togglefloating"
          "$mod, F, fullscreen"

          "$mod, H, movefocus, l"
          "$mod, J, movefocus, d"
          "$mod, K, movefocus, u"
          "$mod, L, movefocus, r"
        ]
        ++ (
          # Auto generate workspace switching from [0-9] and shift + [0-9]
          builtins.concatLists (
            builtins.genList (
              x:
              let
                ws =
                  let
                    c = (x + 1) / 10;
                  in
                  builtins.toString (x + 1 - (c * 10));
              in
              [
                "$mod, ${ws}, workspace, ${toString (x + 1)}"
                "$mod SHIFT, ${ws}, movetoworkspace, ${toString (x + 1)}"
              ]
            ) 10
          )
        );
      bindm = [
        "$mod, mouse:272, movewindow"
        "$mod, mouse:273, resizewindow"
      ];
      bindel = [
        # Media controls
        ", XF86AudioRaiseVolume, exec, swayosd-client --output-volume raise"
        ", XF86AudioLowerVolume, exec, swayosd-client --output-volume lower"
        ", XF86AudioMute, exec, swayosd-client --output-volume mute-toggle"
        ", XF86AudioMicMute, exec, swayosd-client --input-volume mute-toggle"

        ", XF86AudioPlay, exec, swayosd-client --playerctl play-pause"
        ", XF86AudioPrev, exec, swayosd-client --playerctl prev"
        ", XF86AudioNext, exec, swayosd-client --playerctl next"

        # Backlight Controls
        ", XF86MonBrightnessUp, exec, swayosd-client --brightness raise"
        ", XF86MonBrightnessDown, exec, swayosd-client --brightness lower"

        # KBD backlight NOTE: it looks like swayosd doesn't work with keyboard brightness
        ", XF86KbdBrightnessUp, exec, brightnessctl -d '*kbd_backlight*' set +10%"
        ", XF86KbdBrightnessUp, exec, brightnessctl -d '*kbd_backlight*' set +10%"
        ", XF86KbdBrightnessDown, exec, brightnessctl -d '*kbd_backlight*' set 10%-"
      ];
      decoration = {
        rounding = "5";
      };
      gestures = {
        workspace_swipe = true;
      };
    };
  };
}
